---
import { contentfulClient } from "../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { EntryFieldTypes } from "contentful";
import NavLink from "./NavLink.astro"

interface NavItem {
  contentTypeId: "navItem",
  fields: {
    text: EntryFieldTypes.Text,
    href: EntryFieldTypes.Text,
  }
}

interface NavLogo {
    contentTypeId: "navLogo",
    fields: {
        alt: EntryFieldTypes.Text,
        useThisLogo: EntryFieldTypes.Boolean

    }
}

const navEntry = await contentfulClient.getEntries<NavItem>({
  content_type: "navItem",
  "sys.id": Astro.props.id
});

const navLogo = await contentfulClient.getEntries<NavLogo>({
    content_type:"navLogo"
});




---


<header class="bg-neutral border-b border-black">
  <div class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="flex-1 md:flex md:items-center md:gap-12">
        <a class="block text-teal-600" href="/">
          <span class="sr-only">Home</span>
          <svg 
            class="h-8"
            viewBox="0 0 28 24"
            fill="bg-red"
            xmlns="http://www.w3.org/2000/svg">
              <path
                d="M1182.98,395.14c-85.9-21.48-153.19-42.95-153.19-94.49,0-42.95,31.5-71.58,103.08-71.58,85.9,0,151.76,37.22,199,85.9l170.37-153.19C1407.76,62.99,1307.54,0,1135.74,0c-207.59,0-356.49,120.26-356.49,306.38,0,209.02,150.33,276.31,294.92,316.4,108.81,30.07,203.3,48.68,203.3,104.51,0,37.49-4.5,100.9-286.32,89.61-92.98-3.73-297.69-33.13-493.93-315.81L849.41,18.61h-290.63L250.68,436.55v127.74l9.38,13.52.07-.02c312.61,443.09,579.14,448.91,737.38,461.6,379.33,30.43,529.07-133.57,529.07-319.26,0-234.79-190.41-284.9-343.6-324.99Z"
                fill="currentColor"
              />
            <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1526.59 1043.06"><defs><style>.cls-1{fill:#FF340A;stroke-width:0px;}</style></defs><path class="cls-1" d="M1182.98,395.14c-85.9-21.48-153.19-42.95-153.19-94.49,0-42.95,31.5-71.58,103.08-71.58,85.9,0,151.76,37.22,199,85.9l170.37-153.19C1407.76,62.99,1307.54,0,1135.74,0c-207.59,0-356.49,120.26-356.49,306.38,0,209.02,150.33,276.31,294.92,316.4,108.81,30.07,203.3,48.68,203.3,104.51,0,37.49-4.5,100.9-286.32,89.61-92.98-3.73-297.69-33.13-493.93-315.81L849.41,18.61h-290.63L250.68,436.55v127.74l9.38,13.52.07-.02c312.61,443.09,579.14,448.91,737.38,461.6,379.33,30.43,529.07-133.57,529.07-319.26,0-234.79-190.41-284.9-343.6-324.99Z"/><rect class="cls-1" y="18.61" width="250.54" height="1002.17"/></svg>
          </svg>
        </a>
      </div>
      <div class="flex-1 md:flex md:items-center md:gap-12">
      </div>

      <div class="md:flex md:items-center md:gap-12">
        <nav aria-label="Global" class="hidden md:block">
          <ul class="flex items-center gap-6">
            {navEntry.items.map((item) => {
                const { text, href } = item.fields;
                return <a 
                    href={href}
                    class="hover:before:scale-x-100 hover:before:origin-left text-xl text-black hover:text-red tracking-tighter font-black text-transform: uppercase relative before:w-full before:h-px before:origin-right before:transition-transform before:duration-300 before:scale-x-0 before:bg-red before:absolute before:left-0 before:bottom-0 before:rounded-sm"
                    >
                    {text}
                </a>
            })}
          </ul>
        </nav>
        <!-- Mobile menu show/hide based on menu open state. -->
        <label class="relative z-40 cursor-pointer px-3 py-6 md:hidden block" for="mobile-menu">
            <input class="peer hidden" type="checkbox" id="mobile-menu" />
            <div
                class="relative z-50 block h-[1px] w-7 bg-black bg-transparent content-[''] before:absolute before:top-[-0.35rem] before:z-50 before:block before:h-full before:w-full before:bg-black before:transition-all before:duration-500 before:ease-out before:content-[''] after:absolute after:right-0 after:bottom-[-0.35rem] after:block after:h-full after:w-full after:bg-black after:transition-all after:duration-500 after:ease-out after:content-[''] peer-checked:bg-transparent before:peer-checked:top-0 before:peer-checked:w-full before:peer-checked:rotate-45 before:peer-checked:transform after:peer-checked:bottom-0 after:peer-checked:w-full after:peer-checked:-rotate-45 after:peer-checked:transform"
            >
            </div>
            <div
                class="fixed inset-0 z-40 hidden h-full w-full backdrop-blur-sm peer-checked:block"
            >
                &nbsp;
            </div>
            <div
                class="fixed top-0 right-0 z-40 h-full w-full -translate-y-full overflow-y-auto overscroll-y-none border-b transition duration-700 peer-checked:translate-y-0"
            >
                <div class="float-right min-h-full content-evenly w-full bg-neutral px-6 pt-12 shadow-2xl">
                    <menu>
                      <ul class="flex flex-col items-center gap-16">
                        {navEntry.items.map((item:any) => {
                            // console.log(item, "########## OUR ITEMS #########")
                            const { text, href } = item.fields;
                            return <a 
                                href={href}
                                class="text-3xl tracking-tighter text-black hover:text-red font-black text-transform: uppercase relative"
                                >
                                {text}
                            </a>
                        })}
                      </ul>
                    </menu>
                </div>
            </div>
        </label>
      </div>
    </div>
  </div>
</header>


